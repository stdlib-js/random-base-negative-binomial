/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-poisson@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-gamma@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/array-uint32@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";var y=f.isPrimitive,w=b.isPrimitive,x=v;var E=function(t,e){return y(t)?!w(e)||x(e)?new TypeError("invalid argument. Second argument must be a number primitive and not `NaN`. Value: `"+e+"`."):e<=0||e>=1?new RangeError("invalid argument. Second argument must be on the interval `(0,1)`. Value: `"+e+"`."):null:new TypeError("invalid argument. First argument must be a positive number. Value: `"+t+"`.")},N=t,T=e,O=n,L=s,P=r,V=i,A=o.isPrimitive,R=a,S=m,G=p,M=d,U=l.factory,J=u.factory,F=g,k=h,q=c,z=j,B=E;var C=function(){var t,e,n,s,r,i,o,a,m,p;if(o=!0,0===arguments.length)n=U(s={copy:!1});else if(1===arguments.length){if(!P(s=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+s+"`.");if(L(s,"copy")&&!A(s.copy))throw new TypeError("invalid option. `copy` option must be a boolean. Option: `"+s.copy+"`.");if(L(s,"prng")){if(!R(s.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+s.prng+"`.");n=U({prng:s.prng})}else{if(L(s,"state")&&!V(s.state))throw new TypeError("invalid option. `state` option must be a Uint32Array. Option: `"+s.state+"`.");!1===(s=q(s,1)).copy?o=!1:s.state&&(s.state=F(s.state.length,s.state,1,new k(s.state.length),1)),s.copy=!1,n=U(s)}}else{if(a=B(p=arguments[0],m=arguments[1]))throw a;if(arguments.length>2){if(!P(s=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+s+"`.");if(L(s,"copy")&&!A(s.copy))throw new TypeError("invalid option. `copy` option must be a boolean. Option: `"+s.copy+"`.");if(L(s,"prng")){if(!R(s.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+s.prng+"`.");n=U({prng:s.prng})}else{if(L(s,"state")&&!V(s.state))throw new TypeError("invalid option. `state` option must be a Uint32Array. Option: `"+s.state+"`.");!1===(s=q(s,1)).copy?o=!1:s.state&&(s.state=F(s.state.length,s.state,1,new k(s.state.length),1)),s.copy=!1,n=U(s)}}else n=U(s={copy:!1})}return s&&s.prng?t=void 0===p?J({prng:s.prng}):J(p,m/(1-m),{prng:s.prng}):(s.state?e=s.state:(e=n.state,n.state=e),t=void 0===p?J({state:e,copy:!1}):J(p,m/(1-m),{state:e,copy:!1})),r=void 0===p?b:f,i=n.PRNG,N(r,"NAME","negative-binomial"),s&&s.prng?(N(r,"seed",null),N(r,"seedLength",null),O(r,"state",S(null),G),N(r,"stateLength",null),N(r,"byteLength",null),N(r,"toJSON",S(null))):(T(r,"seed",d),T(r,"seedLength",l),O(r,"state",h,c),T(r,"stateLength",u),T(r,"byteLength",g),N(r,"toJSON",j)),N(r,"PRNG",i),r;function d(){return i.seed}function l(){return i.seedLength}function u(){return i.stateLength}function g(){return i.byteLength}function h(){return i.state}function c(t){if(!V(t))throw new TypeError("invalid argument. Must provide a Uint32Array. Value: `"+t+"`.");o&&(t=F(t.length,t,1,new k(t.length),1)),i.state=t}function j(){var t={type:"PRNG"};return t.name=r.NAME,t.state=z(i.state),t.params=void 0===p?[]:[p,m],t}function f(){return n(t())}function b(e,s){return M(e)||M(s)||s<=0||s>=1?NaN:n(t(e,s/(1-s)))}},D=C();t(D,"factory",C);var H=D;export{H as default};
//# sourceMappingURL=index.mjs.map
